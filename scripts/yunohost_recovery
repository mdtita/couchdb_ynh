#!/bin/bash

# YunoHost Recovery Script
# This script helps diagnose and fix common YunoHost API issues

echo "🔍 YunoHost Recovery Script"
echo "=========================="

# Check system resources
echo ""
echo "📊 System Resources:"
echo "Memory usage:"
free -h
echo ""
echo "Disk usage:"
df -h / /var /tmp
echo ""
echo "Load average:"
uptime

# Check YunoHost services
echo ""
echo "🔧 YunoHost Services Status:"
services=("yunohost-api" "nginx" "mysql" "metronome" "postfix" "rspamd" "redis-server")

for service in "${services[@]}"; do
    if systemctl is-active --quiet "$service"; then
        echo "   ✅ $service: running"
    else
        echo "   ❌ $service: not running"
        echo "      Attempting to restart $service..."
        sudo systemctl restart "$service"
        sleep 2
        if systemctl is-active --quiet "$service"; then
            echo "      ✅ $service: restarted successfully"
        else
            echo "      ❌ $service: failed to restart"
        fi
    fi
done

# Check for stuck processes
echo ""
echo "🔍 Checking for stuck YunoHost processes:"
stuck_processes=$(ps aux | grep -E "(yunohost|moulinette)" | grep -v grep | awk '{if($3 > 50 || $4 > 50) print $2, $11}')
if [[ -n "$stuck_processes" ]]; then
    echo "   ⚠️  Found potentially stuck processes:"
    echo "$stuck_processes"
    echo "   Consider killing these processes if they persist"
else
    echo "   ✅ No stuck processes found"
fi

# Check disk space in critical directories
echo ""
echo "💾 Checking critical directories:"
critical_dirs=("/var/log" "/tmp" "/var/cache" "/var/lib/mysql")
for dir in "${critical_dirs[@]}"; do
    if [[ -d "$dir" ]]; then
        usage=$(df "$dir" | tail -1 | awk '{print $5}' | sed 's/%//')
        if [[ $usage -gt 90 ]]; then
            echo "   ⚠️  $dir: ${usage}% full (critical)"
        elif [[ $usage -gt 80 ]]; then
            echo "   ⚠️  $dir: ${usage}% full (warning)"
        else
            echo "   ✅ $dir: ${usage}% used"
        fi
    fi
done

# Check for failed app installations
echo ""
echo "📱 Checking for failed installations:"
if [[ -f /etc/yunohost/installed ]]; then
    echo "   ✅ YunoHost installation complete"
else
    echo "   ❌ YunoHost installation may be incomplete"
fi

# Check nginx configuration
echo ""
echo "🌐 Testing nginx configuration:"
if nginx -t 2>/dev/null; then
    echo "   ✅ Nginx configuration is valid"
else
    echo "   ❌ Nginx configuration has errors:"
    nginx -t
fi

# Check YunoHost API logs for recent errors
echo ""
echo "📝 Recent YunoHost API errors (last 20 lines):"
if [[ -f /var/log/yunohost/yunohost-api.log ]]; then
    tail -20 /var/log/yunohost/yunohost-api.log | grep -i error || echo "   ✅ No recent errors found"
else
    echo "   ℹ️  YunoHost API log not found"
fi

echo ""
echo "🔧 Quick fixes to try:"
echo "1. Clear YunoHost cache: sudo yunohost tools regen-conf"
echo "2. Restart all services: sudo systemctl restart yunohost-api nginx"
echo "3. Check logs: sudo journalctl -u yunohost-api -f"
echo "4. If CouchDB installation failed, remove it: sudo yunohost app remove couchdb"

echo ""
echo "🏁 Script completed!"
